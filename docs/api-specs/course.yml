openapi: 3.0.0
info:
  title: Course API
  version: 1.0.0
  description: API endpoints for course management
paths:
  /health:
    get:
      summary: Check API health
      description: Returns health status of the course service
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "ok"
                  
  /courses:
    get:
      summary: Get all courses
      description: Returns a list of all courses available to the user
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of courses
          content:
            application/json:
              schema:
                type: object
                properties:
                  courses:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        title:
                          type: string
                          example: "Introduction to Computer Science"
                        description:
                          type: string
                          example: "Basic principles of computer science"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unauthorized access"
    
    post:
      summary: Create a new course
      description: Creates a new course with the provided information
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: "Advanced Programming"
                description:
                  type: string
                  example: "Advanced programming concepts and practices"
      responses:
        '201':
          description: Course created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 2
                  title:
                    type: string
                    example: "Advanced Programming"
                  description:
                    type: string
                    example: "Advanced programming concepts and practices"
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Title is required"

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT